{"version":3,"sources":["videoSlice/components/clip/clip.js","videoSlice/components/playAll/playAll.js","videoSlice/containers/modalCreate/modalCreate.js","store/actions/videoSlice.js","store/types/videoSlice.type.js","videoSlice/containers/clipsList/clipsList.js","videoSlice/components/videoHandlerLayout/videoHandlerLayout.js","videoSlice/containers/video/video.js","videoSlice/components/loading/loading.js","videoSlice/containers/videoHandler/videoHandler.js","videoSlice/components/header/header.js","videoSlice/videoSlice.js","App.js","serviceWorker.js","store/reducers/videoSlice.reducer.js","store/store.js","index.js"],"names":["withStyles","clip","marginTop","clip__card","minHeight","margintop","paddingTop","marginBottom","clip__icon","height","width","fill","&:hover","cursor","&:active","transform","props","classes","react_default","a","createElement","className","Card_default","CardContent_default","lib","center","middle","xs","md","lg","IconButton_default","color","button","onClick","handlePlay","data","id","PlayCircleFilled_default","Typography_default","variant","name","start","end","fixed","Edit_default","handleEdit","Delete_default","handleDelete","playAll","playAll__icon","handlePlayAll","customStyles","content","top","left","right","bottom","marginRight","boxShadow","ModalCreate","state","sliderValues","isEditting","currentClipId","changeHandler","value","_this","setState","handleChange","event","Object","defineProperty","target","notAvailableName","isCurrentNameinList","trim","saveClip","console","log","handleSave","maxId","tags","handleCloseModal","_this2","this","_","some","currentNames","item","toLowerCase","newProps","openModal","addZero","concat","react_modal_lib_default","isOpen","onRequestClose","onAfterOpen","afterOpenModal","style","contentLabel","ariaHideApp","Clear_default","modalCreate__button","TextField_default","label","onChange","margin","es5","range","min","max","maxRange","defaultValue","around","getTimeValue","Button_default","modalCreate__button_save","Component","setVideoDuration","videoDuration","dispatch","type","payload","setPlayList","playList","defaultClip","initSlider","ClipsList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","filterClips","filteredClips","clips","filter","indexOf","getClipById","deleteClip","defaultValues","handleOpenModal","getCurrentNames","map","getMaxClipsId","reduce","acc","newSlice","isNew","saveOrUpdateClip","search","nextProps","vidDuration","videoSliceReducer","objectSpread","toString","split","stateClipsCopy","_this3","newClips","cloneDeep","remove","localStorage","setItem","JSON","stringify","_this4","_this5","clipsList","index","key","clip_clip","fluid","modalCreate","subtitle","connect","videoHandlerLayout","backgroundColor","borderRadius","display","alignItems","justifyContent","position","children","Video","setRef","element","video","play","load","_this$props","handleLoadedMetadata","handleEnded","handleTimeUpdated","video_container","video_container__item","autoPlay","autoplay","ref","onLoadedMetadata","onEnded","onTimeUpdate","src","Loading","Cached_default","VideoHandler","fullVideoDuration","playListCount","currentExecution","loading","duration","stopPlay","currentTime","executeClip","executePlayList","isEmpty","length","time","setTimeout","loading_loading","root","flexGrow","menuButton","marginLeft","header","AppBar_default","Toolbar_default","aria-label","Menu_default","VideoSlice","videoHandler","clipsList_clipsList","App","videoSlice","Boolean","window","location","hostname","match","initState","reducer","combineReducers","arguments","undefined","action","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4a95550.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'react-flexbox-grid';\nimport Typography from '@material-ui/core/Typography'\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport Edit from '@material-ui/icons/Edit';\nimport Delete from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = {\n  clip: {\n    marginTop: 10\n  },\n  clip__card: {\n    minHeight: 30,\n    margintop: 5,\n    paddingTop: 5,\n    marginBottom: 5\n  },\n  clip__icon: {\n    height: 40,\n    width: 40,\n    fill: '#303f9f',\n    '&:hover': {\n      fill: '#565f98',\n      cursor: 'pointer'\n    },\n    '&:active': {\n      transform: 'scale(0.8)'\n    }\n  }\n};\n\nconst Clip = (props) => {\n  const {\n    classes\n  } = props;\n  return (\n    <div className={classes.clip}>\n      <Card className={classes.clip__card}>\n        <CardContent>\n          <Row center=\"xs\" middle=\"xs\">\n            <Col xs={6} md={6} lg={1}>\n              <IconButton color=\"primary\"\n                className={classes.clip.button}\n                onClick={() => { props.handlePlay(props.data.id) }}>\n                <PlayCircleFilled className={classes.clip__icon} />\n              </IconButton>\n            </Col>\n            <Col xs={6} md={6} lg={5}>\n              <Typography variant=\"title\" color=\"inherit\">\n                {props.data.name}\n              </Typography>\n            </Col>\n            <Col xs={6} md={6} lg={3}>\n              <Typography variant=\"subheading\" color=\"inherit\">\n                00:{props.data.start} / 00:{props.data.end}\n              </Typography>\n            </Col>\n            <Col xs={6} md={6} lg={3}>\n              {!props.data.fixed &&\n                <Row>\n                  <Col xs={6}>\n                    <IconButton color=\"primary\" className={classes.clip.button}>\n                      <Edit className={classes.clip__icon}\n                        onClick={() => { props.handleEdit(props.data.id) }} />\n                    </IconButton>\n                  </Col>\n                  <Col xs={6}>\n                    <IconButton color=\"primary\" className={classes.clip.button}>\n                      <Delete className={classes.clip__icon}\n                        onClick={() => { props.handleDelete(props.data.id) }} />\n                    </IconButton>\n                  </Col>\n                </Row>\n              }\n            </Col>\n          </Row>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(Clip);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PlayCircleFilled from '@material-ui/icons/PlayCircleFilled';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = {\n  playAll: {\n    marginTop: 10,\n    marginBottom: 10\n  },\n  playAll__icon: {\n    height: 70,\n    width: 70,\n    fill: '#303f9f',\n    '&:hover': {\n      fill: '#565f98',\n      cursor: 'pointer'\n    },\n    '&:active': {\n      transform: 'scale(0.8)'\n    }\n  }\n};\n\nconst PlayAll = (props) => {\n  const { \n    classes\n  } = props;\n\n  return (\n    <IconButton color=\"primary\"\n                className={classes.playAll}\n                onClick={ () => { props.handlePlayAll() } }>\n      <PlayCircleFilled className={classes.playAll__icon}/>\n    </IconButton>\n  );\n}\n\nexport default withStyles(styles)(PlayAll);","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { Slider } from 'material-ui-slider';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport Clear from '@material-ui/icons/Clear';\nimport Button from '@material-ui/core/Button';\nimport _ from 'lodash';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '40vw',\n    minHeight: '200px',\n    height: '30vh',\n    boxShadow: '7px 7px 17px -4px rgba(0,0,0,0.75)'\n  }\n};\n\nconst styles = {\n  modalCreate__button: {\n    height: 20,\n    width: 20,\n  },\n  modalCreate__button_save: {\n    marginTop: 20\n  }\n};\n\n\nclass ModalCreate extends Component {\n  state = {\n    name: '',\n    sliderValues: [5, 10],\n    isEditting: false,\n    currentClipId: 0\n  }\n\n  changeHandler = (value) => {\n    this.setState({ sliderValues: value });\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  isCurrentNameinList() {\n    return _.some(this.props.currentNames, item => { return item.toLowerCase() === this.state.name.toLowerCase() });\n  }\n\n  notAvailableName = () => {\n    return this.isCurrentNameinList() ||\n      this.state.name.trim() === '';\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.openModal && newProps.openModal.clip) {\n      this.setState({\n        name: newProps.openModal.clip.name,\n        sliderValues: [newProps.openModal.clip.start, newProps.openModal.clip.end],\n        isEditting: true,\n        currentClipId: newProps.openModal.clip.id\n      });\n    }\n  }\n\n  isCurrentNameSameThanEdit() {\n    let result;\n    if (this.props.openModal && this.props.openModal.clip) {\n      result = this.state.name.toLowerCase() === this.props.openModal.clip.name.toLowerCase() &&\n        this.state.name.trim() !== '';\n    }\n    else {\n      result = false;\n    }\n    return result;\n  }\n\n  saveClip = () => {\n    console.log(this.state.currentClipId);\n    this.props.handleSave({\n      id: (!this.state.isEditting) ? this.props.maxId + 1 : this.state.currentClipId,\n      name: this.state.name,\n      start: this.state.sliderValues[0],\n      end: this.state.sliderValues[1],\n      fixed: false,\n      tags: []\n    }, !this.state.isEditting);\n    this.setState({\n      name: '',\n      sliderValues: [5, 10]\n    });\n    this.props.handleCloseModal();\n    this.setState({ isEditting: false });\n  }\n\n  getTimeValue(value) {\n    const addZero = (+value < 10) ? '0' : '';\n    return `00:${value}${addZero}`;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return (\n      <Modal\n        isOpen={this.props.openModal.state}\n        onRequestClose={this.props.handleCloseModal}\n        onAfterOpen={this.afterOpenModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n        ariaHideApp={false}>\n        <Grid>\n          <Row middle=\"xs\" end=\"xs\">\n            <Col xs={1}>\n              <IconButton color=\"primary\">\n                <Clear className={classes.modalCreate__button}\n                  onClick={this.props.handleCloseModal} />\n              </IconButton>\n            </Col>\n          </Row>\n          <Row middle=\"xs\">\n            <Col xs={6}>\n              <Typography variant=\"title\" color=\"inherit\">\n                Create new slice\n              </Typography>\n            </Col>\n          </Row>\n          <Row middle=\"xs\">\n            <Col xs={6}>\n              <TextField\n                id=\"name\"\n                label=\"Name\"\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Col>\n            <Col xs={6}>\n              <Row>\n                <Col xs={12}>\n                  <Slider\n                    range={true}\n                    min={0}\n                    max={this.props.maxRange}\n                    defaultValue={this.state.sliderValues}\n                    onChange={this.changeHandler}>\n                  </Slider>\n                </Col>\n                <Col xs={12}>\n                  <Row around=\"xs\">\n                    <Col xs={1}>\n                      <Typography variant=\"subtitle1\" color=\"inherit\">\n                        {this.getTimeValue(this.state.sliderValues[0])}\n                      </Typography>\n                    </Col>\n                    <Col xs={1}>\n                      <Typography variant=\"subtitle1\" color=\"inherit\">\n                        {this.getTimeValue(this.state.sliderValues[1])}\n                      </Typography>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row middle=\"xs\" end=\"xs\">\n            <Col xs={12}>\n              {((!this.notAvailableName()) || (this.state.isEditting)) ?\n                <Button variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.modalCreate__button_save}\n                  onClick={this.saveClip}>\n                  Save\n                </Button>\n                :\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"inherit\"\n                  className={classes.modalCreate__button_save}>\n                  invalid name or already exist !!\n                </Typography>\n              }\n            </Col>\n          </Row>\n        </Grid>\n      </Modal>\n    );\n  }\n};\n\n\nexport default withStyles(styles)(ModalCreate);","import { SET_VIDEO_DURATION } from '../types/videoSlice.type';\nimport { SET_PLAY_LIST } from '../types/videoSlice.type';\n\nexport const setVideoDuration = (videoDuration) => {\n  return dispatch => {\n    dispatch({\n       type: SET_VIDEO_DURATION,\n       payload: {\n        videoDuration\n       }\n    })\n  }\n}\n\nexport const setPlayList = (playList) => {\n  return dispatch => {\n    dispatch({\n       type: SET_PLAY_LIST,\n       payload: {\n        playList\n       }\n    })\n  }\n}","export const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\nexport const SET_PLAY_LIST = 'SET_PLAY_LIST';","import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport _ from 'lodash';\n\nimport Clip from './../../components/clip/clip';\nimport PlayAll from './../../components/playAll/playAll';\nimport ModalCreate from './../modalCreate/modalCreate';\n\nimport { connect } from \"react-redux\";\nimport { setPlayList } from '../../../store/actions/videoSlice';\n\nconst defaultClip = {\n  \"id\": 1,\n  \"name\": \"Full video\",\n  \"start\": 0,\n  \"end\": 0,\n  \"fixed\": true,\n  \"tags\": [\n    \"full\"\n  ]\n};\n\nconst initSlider = {\n  name: '',\n  sliderValues: [5, 10]\n}\n\nclass ClipsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      search: '',\n      clips: [defaultClip],\n      filteredClips: [defaultClip],\n      maxId: defaultClip.id,\n      openModal: {\n        state: false,\n        clip: null\n      },\n      maxRange: 0\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const vidDuration = nextProps.videoSliceReducer.videoDuration;\n    if(this.props.videoSliceReducer.videoDuration !== vidDuration) {\n      this.setState({ \n        clips: [{...defaultClip,\n        end : vidDuration.toString().split('.')[0] }],\n        maxRange : vidDuration.toString().split('.')[0]\n      }, () => {\n        this.filterClips(this.state.search);\n      });\n    }\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n\n    switch (name) {\n      case 'search': {\n        this.filterClips(event.target.value);\n        break;\n      }\n      default: break;\n    }\n  };\n\n  filterClips = (value) => {\n    let filteredClips = this.state.clips;\n    filteredClips = filteredClips.filter((clip) => {\n      let clipName = clip.name.toLowerCase();\n      return clipName.indexOf(value.toLowerCase()) !== -1;\n    })\n    this.setState({\n      filteredClips\n    });\n  }\n\n  handlePlay = id => {\n    const clip = this.getClipById(id);\n    this.props.dispatch(setPlayList([clip]));\n  }\n\n  handleDelete = id => {\n    this.deleteClip(id);\n  }\n\n  getClipById(id) {\n    return _.filter(this.state.clips, item => item.id === id)[0];\n  }\n\n  handleEdit = id => {\n  const clip = this.getClipById(id);\n    this.setState({ defaultValues: { name: clip.name , sliderValues: [ clip.start, clip.end ] } , openModal: { clip } }, () => {\n      this.setState( { openModal: { state: true, }});\n    });\n  }\n\n  handleCloseModal = () => {\n    this.setState({ openModal: { state: false, clip: null, defaultValues: initSlider.sliderValues } });\n  };\n\n  handleOpenModal = () => {\n    this.setState({ openModal: { state: true, clip: null } });\n  };\n\n  getCurrentNames = () => {\n    return _.map(this.state.clips, item => { return  item.name });\n  }\n\n  saveOrUpdateClip(newSlice, isNew) {\n    let newClips = [];\n    let stateClipsCopy;\n    if(isNew) {\n     newClips = _.concat(this.state.clips, newSlice);\n    }else{\n      stateClipsCopy = _.cloneDeep(this.state.clips);\n      _.remove(stateClipsCopy, function (clip) {\n        return clip.id === newSlice.id;\n      });\n      newClips = _.concat(stateClipsCopy, newSlice);\n    }\n\n    this.setState({ clips: newClips } , () => {\n      this.setState({\n        maxId: this.getMaxClipsId()\n      });\n      this.filterClips(this.state.search);\n      localStorage.setItem('clips', JSON.stringify(this.state.clips));\n    });\n  }\n\n  getMaxClipsId = () => {\n    return this.state.clips.reduce((acc, clip) => acc = acc > clip.id ? acc : clip.id, 0);\n  }\n\n  handleSave = (newSlice, isNew) => {\n    this.saveOrUpdateClip(newSlice, isNew);\n  }\n\n  deleteClip(id) {\n    let newClips = _.filter(_.cloneDeep(this.state.clips), clip =>  clip.id !== id );\n    this.setState({clips: newClips}, () => {\n      this.filterClips(this.state.search);\n    });\n  }\n\n  handlePlayAll = () => {\n    this.props.dispatch(setPlayList(this.state.filteredClips));\n  }\n\n  render() {\n    const clipsList = this.state.filteredClips.map((clip, index) => {\n      return (\n        <Col key={index} xs={12}>\n          <Clip data={clip} \n                handlePlay={this.handlePlay}\n                handleEdit={this.handleEdit}\n                handleDelete={this.handleDelete} />\n        </Col>\n      );\n    });\n\n    return (\n      <section>\n        <Grid fluid={true}>\n          <Row center=\"xs\">\n            <Col xs={12}>\n              <TextField\n                id=\"outlined-name\"\n                label=\"Search\"\n                value={this.state.search}\n                onChange={this.handleChange('search')}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Col>\n          </Row>\n          <Row center=\"xs\" middle=\"xs\">\n            <Col xs={12} lg={6}>\n              <PlayAll handlePlayAll={this.handlePlayAll} />\n            </Col>\n            <Col xs={12} lg={6}>\n              <Button variant=\"contained\" color=\"primary\" onClick={this.handleOpenModal}>\n                New slice\n              </Button>\n              <ModalCreate openModal={this.state.openModal}\n                           handleCloseModal={this.handleCloseModal} \n                           subtitle={'test'}\n                           currentNames={this.getCurrentNames()}\n                           maxId={ this.state.maxId }\n                           handleSave={this.handleSave}\n                           maxRange={this.state.maxRange} />\n            </Col>\n          </Row>\n          <Row>\n            {clipsList}\n          </Row>\n        </Grid>\n      </section>\n    );\n  }\n}\n\nexport default connect(state => state)(ClipsList);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  videoHandlerLayout: {\n    height: '70vh',\n    width: '100%',\n    backgroundColor: '#A4A4A4',\n    borderRadius: '6px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative'\n  }\n};\n\nconst VideoHandlerLayout = (props) => {\n  const { classes } = props;\n  return (\n    <section className={classes.videoHandlerLayout}>\n      {props.children}\n    </section>\n  )\n}\n\nexport default withStyles(styles)(VideoHandlerLayout);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  video_container: {\n    width: '100%',\n    height: '70%',\n    backgroundColor: 'black'\n  },\n  video_container__item: {\n    width: '100%;',\n    height: 'auto'\n  }\n};\n\nclass Video extends Component {\n  setRef = (element) => {\n    this.video = element\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.play !== nextProps.play && nextProps.play) {\n      this.video.load();\n      this.video.play();\n    }\n  }\n\n  render() {\n    const {\n      handleLoadedMetadata,\n      handleEnded,\n      handleTimeUpdated\n    } = this.props;\n    const { classes } = this.props;\n    return (\n      <div className={classes.video_container}>\n        <video className={classes.video_container__item}\n          id=\"video\"\n          autoPlay={this.props.autoplay}\n          ref={this.setRef}\n          onLoadedMetadata={handleLoadedMetadata}\n          onEnded={handleEnded}\n          onTimeUpdate={handleTimeUpdated}>\n          <source\n            src={`${this.props.src}#t=${this.props.start},${this.props.end}`}\n            type=\"video/mp4\" />\n          Your browser does not support HTML5 video.\n      </video>\n      </div>\n    );\n  }\n};\n\nexport default withStyles(styles)(Video);","import React from 'react';\nimport Cached from '@material-ui/icons/Cached';\nimport './loading.scss';\n\nconst Loading = () => {\n  return(\n    <div className=\"loading\">\n      <Cached className=\"loading__icon rotating\" />\n    </div>\n  )\n};\n\nexport default Loading;","import React, { Component } from 'react';\nimport VideoHandlerLayout from './../../components/videoHandlerLayout/videoHandlerLayout';\nimport Video from './../../containers/video/video';\nimport { connect } from \"react-redux\";\nimport { setVideoDuration } from '../../../store/actions/videoSlice';\nimport _ from 'lodash';\nimport Loading from './../../components/loading/loading';\nimport { setPlayList } from '../../../store/actions/videoSlice';\n\nconst videoUrl = 'https://download.blender.org/durian/trailer/sintel_trailer-480p.mp4';\nclass VideoHandler extends Component {\n\n  state = {\n    fullVideoDuration: 0,\n    start: 0,\n    end: 0,\n    play: false,\n    playListCount: 0,\n    currentExecution: 0,\n    playList: [],\n    loading: false\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const playList = nextProps.videoSliceReducer.playList;\n    if (this.props.videoSliceReducer.playList !== playList) {\n      this.executePlayList(playList);\n    }\n  }\n\n  executePlayList(playList) {\n    if (_.isEmpty(playList)) { return; };\n\n    this.setState({ playListCount: playList.length, currentExecution: 0, playList }, () => {\n      this.executeClip();\n    });\n  }\n\n  executeClip() {\n    if (this.state.currentExecution < this.state.playListCount) {\n      const clip = this.state.playList[this.state.currentExecution];\n      let time;\n\n      if (this.state.currentExecution === 0) {\n        time = 0;\n      } else {\n        time = 3000;\n      }\n\n      this.setState({ loading: true }, () => {\n        setTimeout(() => {\n          this.setState({ start: clip.start, end: clip.end }, () => {\n            this.setState({ play: true });\n          });\n          this.setState({ loading: false });\n        }, time);\n      });\n    }\n    else {\n      this.props.dispatch(setPlayList([]));\n    }\n  }\n\n  handleLoadedMetadata = (event) => {\n    this.video = event.target;\n    this.setState({ fullVideoDuration: this.video.duration }, () => {\n      this.props.dispatch(setVideoDuration(this.state.fullVideoDuration));\n    });\n  }\n\n  handleEnded = (event) => {\n    this.stopPlay();\n  }\n\n  handleTimeUpdated = (event) => {\n    if (event.target.currentTime >= this.state.end) {\n      this.stopPlay();\n    }\n  }\n\n  stopPlay = () => {\n    this.setState({ play: false, currentExecution: this.state.currentExecution + 1 }, () => {\n      this.executeClip();\n    });\n  }\n\n  render() {\n    return (\n      <VideoHandlerLayout>\n        <Video\n          src={videoUrl}\n          autoplay={false}\n          handleLoadedMetadata={this.handleLoadedMetadata}\n          start={this.state.start}\n          end={this.state.end}\n          play={this.state.play}\n          handleEnded={this.handleEnded}\n          handleTimeUpdated={this.handleTimeUpdated}\n        />\n        {this.state.loading &&\n          <Loading />\n        }\n      </VideoHandlerLayout>\n    )\n  }\n}\n\nexport default connect(state => state)(VideoHandler);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -18,\n    marginRight: 10,\n  },\n  header: {\n    marginBottom: 20\n  }\n};\n\nconst Header = (props) => {\n  const { classes } = props;\n  return (\n    <AppBar position=\"static\"\n            className={classes.header}>\n      <Toolbar variant=\"dense\">\n        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\">\n            VideoSlice HZ\n          </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n};\n\nexport default withStyles(styles)(Header);","import React, { Component } from 'react';\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport ClipsList from './containers/clipsList/clipsList';\nimport VideoHandler from './containers/videoHandler/videoHandler';\nimport Header from './components/header/header';\n\nclass VideoSlice extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Grid>\n          <Row>\n            <Col xs={12} lg={6}>\n              <VideoHandler />\n            </Col>\n            <Col xs={12} lg={6}>\n              <ClipsList />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default VideoSlice;","import React, { Component } from 'react';\nimport VideoSlice from './videoSlice/videoSlice';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <VideoSlice className=\"border\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_VIDEO_DURATION, SET_PLAY_LIST } from '../types/videoSlice.type';\n\nconst initState = {\n  videoDuration: 0,\n  playList: []\n}\nexport default (state = initState, action) => {\nswitch(action.type) {\n case SET_VIDEO_DURATION :\n  return {...state, videoDuration: action.payload.videoDuration}\n case SET_PLAY_LIST :\n  return {...state, playList: action.payload.playList}\n default :\n  return state\n }\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport videoSliceReducer from './reducers/videoSlice.reducer';\nimport thunk from 'redux-thunk';\n\nconst reducer = combineReducers({\n  videoSliceReducer\n})\n\nconst store = createStore(\n reducer,\n compose(\n  applyMiddleware(thunk),\n  window.devToolsExtension ? window.devToolsExtension() : f => f\n )\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from \"./store/store\";\n\nReactDOM.render(\n\n<Provider store={store}>\n  <App />\n</Provider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}